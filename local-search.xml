<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java求解数组最值</title>
    <link href="/2022/08/19/Java%E6%B1%82%E8%A7%A3%E6%95%B0%E7%BB%84%E6%9C%80%E5%80%BC/"/>
    <url>/2022/08/19/Java%E6%B1%82%E8%A7%A3%E6%95%B0%E7%BB%84%E6%9C%80%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<h2 id="求解数组中的最大值"><a href="#求解数组中的最大值" class="headerlink" title="求解数组中的最大值"></a>求解数组中的最大值</h2><p class="note note-primary">使用Math工具类可以求解一些简单的数学运算，但是不能求解数组的最值问题。</p><p>使用Java的一些工具类可以快捷的实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Java">Integer[] a = &#123;&#125;;<br><span class="hljs-type">int</span> <span class="hljs-variable">mi</span> <span class="hljs-operator">=</span> Collections.min(Arrays.asList(a));<br></code></pre></td></tr></table></figure><h3 id="Collections-max"><a href="#Collections-max" class="headerlink" title="Collections.max"></a>Collections.max</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; T <span class="hljs-title function_">max</span><span class="hljs-params">(Collection&lt;? extends T&gt; coll,</span><br><span class="hljs-params">                        Comparator&lt;? <span class="hljs-built_in">super</span> T&gt; comp)</span><br></code></pre></td></tr></table></figure><p>返回给定集合的最大元素，根据指定的比较器诱导的顺序。集合中的所有元素必须相互比较由指定的比较器。</p><p>需要读取的数据使用上界通配符（Upper Bounds Wildcards）<code>&lt;? extends T&gt;</code></p><p>这表示只能存T的子类。</p><p>需要写入的数据使用下界通配符（Lower Bounds Wildcards）<code>&lt;? super T&gt;</code></p><p>这表示只能存T的父类。</p><h3 id="Array-asList"><a href="#Array-asList" class="headerlink" title="Array.asList"></a>Array.asList</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; List&lt;T&gt; <span class="hljs-title function_">asList</span><span class="hljs-params">(T... a)</span><br><br></code></pre></td></tr></table></figure><p>Arrays.asList()返回由指定数组支持的一个固定大小的列表(ArrayList)。List继承了接口Collection</p><h2 id="Java排序"><a href="#Java排序" class="headerlink" title="Java排序"></a>Java排序</h2><p class="note note-primary">使用sort和匿名类可以很方便的排序，类去实现compare接口让类的实例可以排序。数组用Arrays，集合用Collections</p><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><p>逆序排列</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Java">Integer[] arrays = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;;<br>Arrays.sort(arrays, Collections.reverseOrder());<br></code></pre></td></tr></table></figure><p>使用匿名函数（类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Java"><br>Arrays.sort(arrays, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Comparator</span>&lt;Integer&gt;() &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compare</span><span class="hljs-params">(Integer o1, Integer o2)</span> &#123;<br>        <span class="hljs-keyword">return</span> o2 - o1;<br>        <span class="hljs-comment">//如果返回正数则交换</span><br>        <span class="hljs-comment">//当o2大的时候交换，也就是o2需要小，那么是降序</span><br>    &#125;<br>&#125;);<br><br></code></pre></td></tr></table></figure><h3 id="集合排序"><a href="#集合排序" class="headerlink" title="集合排序"></a>集合排序</h3><p>使用匿名函数（类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Java"><br><br>List&lt;Student&gt; students = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Student&gt;(Arrays.asList(studentWang, studentZhang, studentGou, studentZhao, studentLi));<br>Collections.sort(students, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Comparator</span>&lt;Student&gt;() &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compare</span><span class="hljs-params">(Student o1, Student o2)</span> &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span> == o1.getAge()) &#123;<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span> == o2.getAge()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> o1.getAge().compareTo(o2.getAge());<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>实现接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs Java"><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentAsc</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Comparable</span>&lt;StudentAsc&gt; &#123;<br>    <span class="hljs-keyword">private</span> String name;<br> <br>    <span class="hljs-keyword">private</span> Integer age;<br> <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">StudentAsc</span><span class="hljs-params">(String name, Integer age)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br> <br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br> <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br> <br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br> <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(Integer age)</span> &#123;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br> <br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compareTo</span><span class="hljs-params">(StudentAsc o)</span> &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span> == <span class="hljs-built_in">this</span>.age) &#123;<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span> == o.getAge()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age.compareTo(o.getAge());<br>    &#125;<br> <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;StudentAsc&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;name=&#x27;&quot;</span> + name + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, age=&quot;</span> + age +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br> <br>&#125;<br><span class="hljs-comment">//方法调用</span><br>List&lt;StudentAsc&gt; studentAscs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;StudentAsc&gt;(Arrays.asList(studentWang, studentZhang, studentGou, studentZhao, studentLi));<br>Collections.sort(studentAscs);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+fluid搭建博客</title>
    <link href="/2022/08/17/hexo-fluid%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/08/17/hexo-fluid%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo安装与配置"><a href="#hexo安装与配置" class="headerlink" title="hexo安装与配置"></a>hexo安装与配置</h2><p class="note note-primary">hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的</p><ol><li>下载并安装node.js</li><li>命令行安装hexo </li><li>配置github</li><li>配置SSH免密登录</li><li>搭建博客</li></ol><p><a href="https://www.bilibili.com/read/cv12633102">参考文章</a></p><h2 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h2><p>在国际版leancloud创建应用</p><p><img src="https://raw.githubusercontent.com/wangqianyv123/image-hosting/main/img/202208172110804.png"></p><p>创建Commnet数据库</p><p><img src="https://raw.githubusercontent.com/wangqianyv123/image-hosting/main/img/202208172109839.png"></p><p>修改hexo的主题配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">valine:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">appid:</span>  <span class="hljs-string">your</span> <span class="hljs-string">app</span> <span class="hljs-string">id</span><br>  <span class="hljs-attr">appkey:</span> <span class="hljs-string">your</span> <span class="hljs-string">app</span> <span class="hljs-string">key</span><br>  <span class="hljs-attr">notify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># mail notifier , https://github.com/xCss/Valine/wiki</span><br>  <span class="hljs-attr">verify:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Verification code</span><br>  <span class="hljs-attr">placeholder:</span> <span class="hljs-string">just</span> <span class="hljs-string">so</span> <span class="hljs-string">so</span><br>  <span class="hljs-attr">guest_info:</span> [<span class="hljs-string">nick</span>,<span class="hljs-string">mail</span>,<span class="hljs-string">link</span>]<br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><blockquote><p>使用又拍云+picgo构建图床。</p></blockquote><p>picgo我们已经很熟悉了，可以快捷上传图片到图床。使用又拍云的云存储服务可以方便的搭建图床。</p><p>其中 <strong>设定存储空间名</strong> 为服务名，还需要设定关键的加速域名</p><p class="note note-primary">发现博客上线github后无法正常显示图片，因此又采用了GitHub图床。</p><p><img src="https://raw.githubusercontent.com/wangqianyv123/image-hosting/main/img/202208172109946.png"></p><p><img src="https://raw.githubusercontent.com/wangqianyv123/image-hosting/main/img/202208172108613.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
